---
import type { SlAlert } from '@shoelace-style/shoelace';

interface Props extends Omit<SlAlert, any> {
    /**
     * Indicates whether or not the alert is open. You can toggle this attribute to show and hide the alert, or you can
     * use the `show()` and `hide()` methods and this attribute will reflect the alert's open state.
     */
    open?: boolean;
    /** Enables a close button that allows the user to dismiss the alert. */
    closable?: boolean;
    /** The alert's theme variant. */
    variant?: 'primary' | 'success' | 'neutral' | 'warning' | 'danger';
    /**
     * The length of time, in milliseconds, the alert will show before closing itself. If the user interacts with
     * the alert before it closes (e.g. moves the mouse over it), the timer will restart. Defaults to `Infinity`, meaning
     * the alert will not close on its own.
     */
    duration?: number;
    id?: string;
}

const { variant, open, closable, duration, ...rest } = Astro.props;
---

<sl-alert {variant} {open} {closable} {duration} {...rest}>
    { Astro.slots.has('icon') && <slot slot="icon" name="icon"/> }
    <slot />
</sl-alert>

<script>
    import '@shoelace-style/shoelace/dist/components/alert/alert.js';
</script>