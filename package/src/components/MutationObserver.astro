---
import type { SlMutationObserver } from '@shoelace-style/shoelace';


interface Props extends Omit<SlMutationObserver, any> {
    /**
     * Watches for changes to attributes. To watch only specific attributes, separate them by a space, e.g.
     * `attr="class id title"`. To watch all attributes, use `*`.
     */
    attr?: string;
    /** Indicates whether or not the attribute's previous value should be recorded when monitoring changes. */
    attrOldValue?: boolean;
    /** Watches for changes to the character data contained within the node. */
    charData?: boolean;
    /** Indicates whether or not the previous value of the node's text should be recorded. */
    charDataOldValue?: boolean;
    /** Watches for the addition or removal of new child nodes. */
    childList?: boolean;
    /** Disables the observer. */
    disabled?: boolean;
}

const { attr, attrOldValue, charData, charDataOldValue, childList, disabled, ...rest } = Astro.props;
---

<sl-mutation-observer
    {attr}
    {attrOldValue}
    {charData}
    {charDataOldValue}
    {childList}
    {disabled}
    {...rest}
    >
    <slot />
</sl-mutation-observer>

<script>
    import '@shoelace-style/shoelace/dist/components/mutation-observer/mutation-observer.js';
</script>