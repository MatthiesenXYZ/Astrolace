---
import type { SlDrawer } from '@shoelace-style/shoelace';

interface Props extends Omit<SlDrawer, any> {
    /**
     * Indicates whether or not the drawer is open. You can toggle this attribute to show and hide the drawer, or you can
     * use the `show()` and `hide()` methods and this attribute will reflect the drawer's open state.
     */
    open?: boolean;
    /**
     * The drawer's label as displayed in the header. You should always include a relevant label even when using
     * `no-header`, as it is required for proper accessibility. If you need to display HTML, use the `label` slot instead.
     */
    label?: string;
    /** The direction from which the drawer will open. */
    placement?: 'top' | 'end' | 'bottom' | 'start';
    /**
     * By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of
     * its parent element, set this attribute and add `position: relative` to the parent.
     */
    contained?: boolean;
    /**
     * Removes the header. This will also remove the default close button, so please ensure you provide an easy,
     * accessible way for users to dismiss the drawer.
     */
    noHeader?: boolean;
    id?: string;
}

const { open, id, label, placement, contained, noHeader, ...rest } = Astro.props;

---

<sl-drawer
    {open}
    {id}
    {placement}
    {label}
    {contained}
    {noHeader}
    {...rest}
    >
    {
        Astro.slots.has('label') && <slot slot="label" name="label"/>
    }
    {
        Astro.slots.has('header-actions') && <slot slot="header-actions" name="header-actions"/>
    }
    {
        Astro.slots.has('footer') && <slot slot="footer" name="footer"/>
    }
    <slot />
</sl-drawer>

<script>
    import '@shoelace-style/shoelace/dist/components/drawer/drawer.js';
</script>